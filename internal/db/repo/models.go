// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"fmt"
	"time"
)

type TransactionType string

const (
	TransactionTypeCREDIT TransactionType = "CREDIT"
	TransactionTypeDEBIT  TransactionType = "DEBIT"
)

func (e *TransactionType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TransactionType(s)
	case string:
		*e = TransactionType(s)
	default:
		return fmt.Errorf("unsupported scan type for TransactionType: %T", src)
	}
	return nil
}

type Transaction struct {
	ID        int64           `json:"id"`
	UserID    int64           `json:"user_id"`
	Amount    int64           `json:"amount"`
	Type      TransactionType `json:"type"`
	CreatedAt time.Time       `json:"created_at"`
}

type User struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

type Wallet struct {
	ID        int64     `json:"id"`
	UserID    int64     `json:"user_id"`
	Balance   int64     `json:"balance"`
	CreatedAt time.Time `json:"created_at"`
}
